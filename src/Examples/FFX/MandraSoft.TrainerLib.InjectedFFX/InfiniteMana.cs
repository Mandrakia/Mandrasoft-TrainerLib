using EasyHook;
using Mandrasoft.TrainerLib;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace MandraSoft.TrainerLib.InjectedFFX
{
    unsafe class InfiniteMana : TogglePatch
    {
        public override string Description => "Casting spells doesn't cost any Mana";

        public override string Title => "Infinite Mana";

        private byte[] originalBytes;
        private IntPtr addrFctChangeMana;
        private MaskMatch _mt;
        public override bool ApplyPatch(IGameWriter writer)
        {           
            writer.ApplyPatch(new MaskItem[] { 0x55, 0x8B, 0xEC, 0x56, 0xFF, 0x75, 0x08, 0xE8, "*", "*", "*", "*", 0x8B, 0xF0, 0x68, 0x0F, 0x27, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xCC, 0x06, 0x00, 0x00, 0x8B, 0x96, 0xD4, 0x05, 0x00, 0x00, 0x2B, 0xD1, 0x6A, 0x00, 0x52, 0xE8, 0xB6, 0xBA, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xBC, 0x05, 0x00, 0x00, "?", "?", "?", "?", "?", "?" }, new byte[] { 0x90, 0x90, 0x90, 0x90, 0x90, 0x90 },_mt);
            return true;
        }
        public override bool DisablePatch(IGameWriter writer)
        {
            writer.ApplyPatch(new MaskItem[] { 0x55, 0x8B, 0xEC, 0x56, 0xFF, 0x75, 0x08, 0xE8, "*", "*", "*", "*", 0x8B, 0xF0, 0x68, 0x0F, 0x27, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xCC, 0x06, 0x00, 0x00, 0x8B, 0x96, 0xD4, 0x05, 0x00, 0x00, 0x2B, 0xD1, 0x6A, 0x00, 0x52, 0xE8, 0xB6, 0xBA, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xBC, 0x05, 0x00, 0x00, "?", "?", "?", "?", "?", "?" }, originalBytes, _mt);
            return true;
        }

        public override void Init(IGameWriter writer)
        {
            var res = writer.SearchMask(new MaskItem[] { 0x55, 0x8B, 0xEC, 0x56, 0xFF, 0x75, 0x08, 0xE8, "*", "*", "*", "*", 0x8B, 0xF0, 0x68, 0x0F, 0x27, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xCC, 0x06, 0x00, 0x00, 0x8B, 0x96, 0xD4, 0x05, 0x00, 0x00, 0x2B, 0xD1, 0x6A, 0x00, 0x52, 0xE8, 0xB6, 0xBA, 0x00, 0x00, 0x0F, 0xB6, 0x8E, 0xBC, 0x05, 0x00, 0x00, "?", "?", "?", "?", "?", "?" });
            if (res.Success)
            {
                addrFctChangeMana = res.Matches.First().Start;
                originalBytes = res.Matches.First().Captures.ToArray();
                _mt = res.Matches.First();
            }
        }

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        delegate int DamageCharacter(int a1, IntPtr a2, int hpChange_1, int a4, int a5, int a6, int a7);
    }
}
